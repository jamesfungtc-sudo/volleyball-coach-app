{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red20\green67\blue174;\red246\green247\blue249;\red46\green49\blue51;
\red24\green25\blue27;\red186\green6\blue115;\red162\green0\blue16;\red77\green80\blue85;\red18\green115\blue126;
}
{\*\expandedcolortbl;;\cssrgb\c9412\c35294\c73725;\cssrgb\c97255\c97647\c98039;\cssrgb\c23529\c25098\c26275;
\cssrgb\c12549\c12941\c14118;\cssrgb\c78824\c15294\c52549;\cssrgb\c70196\c7843\c7059;\cssrgb\c37255\c38824\c40784;\cssrgb\c3529\c52157\c56863;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 generateStatsTables\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 sheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 getActiveSpreadsheet\cf4 \strokec4 ().\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'StatsTableInGameTrends'\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 cellData\cf4 \strokec4  = \cf5 \strokec5 sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf7 \strokec7 'A1'\cf4 \strokec4 ).\cf5 \strokec5 getValue\cf4 \strokec4 (); \cf8 \strokec8 // Get data from A1\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf8 \strokec8 // Check if data is empty\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 if\cf4 \strokec4  (!\cf5 \strokec5 cellData\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf6 \strokec6 Logger\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf7 \strokec7 "Error: Data in A1 is empty or not available."\cf4 \strokec4 );\cb1 \
\cb3     \cf2 \strokec2 return\cf4 \strokec4 ; \cf8 \strokec8 // Exit the function if no data is found\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 data\cf4 \strokec4  = \cf6 \strokec6 JSON\cf4 \strokec4 .\cf5 \strokec5 parse\cf4 \strokec4 (\cf5 \strokec5 cellData\cf4 \strokec4 ); \cf8 \strokec8 // Try to parse the data as JSON\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf8 \strokec8 // 1. Total Errors for Each Team\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 errorsTable\cf4 \strokec4  = [[\cf7 \strokec7 'Team'\cf4 \strokec4 , \cf7 \strokec7 'Error Type'\cf4 \strokec4 , \cf7 \strokec7 'Total Errors'\cf4 \strokec4 ]];\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 homeErrors\cf4 \strokec4  = \{\};\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 opponentErrors\cf4 \strokec4  = \{\};\cb1 \
\cb3     \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf2 \strokec2 set\cf4 \strokec4  => \{\cb1 \
\cb3       \cf8 \strokec8 // Check if set is not null and has points property\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf2 \strokec2 set\cf4 \strokec4  && \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf5 \strokec5 point\cf4 \strokec4  => \{\cb1 \
\cb3           \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 winning_team\cf4 \strokec4  === \cf7 \strokec7 'opponent'\cf4 \strokec4  || \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 winning_team\cf4 \strokec4  === \cf7 \strokec7 'home'\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4 .\cf5 \strokec5 includes\cf4 \strokec4 (\cf7 \strokec7 'E.'\cf4 \strokec4 )) \{\cb1 \
\cb3               \cf2 \strokec2 let\cf4 \strokec4  \cf5 \strokec5 team\cf4 \strokec4  = \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 winning_team\cf4 \strokec4  === \cf7 \strokec7 'home'\cf4 \strokec4  ? \cf7 \strokec7 'Home'\cf4 \strokec4  : \cf7 \strokec7 'Opponent'\cf4 \strokec4 ;\cb1 \
\cb3               \cf2 \strokec2 let\cf4 \strokec4  \cf5 \strokec5 errorType\cf4 \strokec4  = \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4 ;\cb1 \
\cb3               \cf2 \strokec2 if\cf4 \strokec4  (!\cf5 \strokec5 homeErrors\cf4 \strokec4 [\cf5 \strokec5 errorType\cf4 \strokec4 ]) \cf5 \strokec5 homeErrors\cf4 \strokec4 [\cf5 \strokec5 errorType\cf4 \strokec4 ] = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3               \cf2 \strokec2 if\cf4 \strokec4  (!\cf5 \strokec5 opponentErrors\cf4 \strokec4 [\cf5 \strokec5 errorType\cf4 \strokec4 ]) \cf5 \strokec5 opponentErrors\cf4 \strokec4 [\cf5 \strokec5 errorType\cf4 \strokec4 ] = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\
\cb3               \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 team\cf4 \strokec4  === \cf7 \strokec7 'Home'\cf4 \strokec4 ) \cf5 \strokec5 homeErrors\cf4 \strokec4 [\cf5 \strokec5 errorType\cf4 \strokec4 ]++;\cb1 \
\cb3               \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 team\cf4 \strokec4  === \cf7 \strokec7 'Opponent'\cf4 \strokec4 ) \cf5 \strokec5 opponentErrors\cf4 \strokec4 [\cf5 \strokec5 errorType\cf4 \strokec4 ]++;\cb1 \
\cb3             \}\cb1 \
\cb3           \}\cb1 \
\cb3         \});\cb1 \
\cb3       \}\cb1 \
\cb3     \});\cb1 \
\
\cb3     \cf8 \strokec8 // Add error counts to the errors table\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 error\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 homeErrors\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 errorsTable\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 ([\cf7 \strokec7 'Home'\cf4 \strokec4 , \cf5 \strokec5 error\cf4 \strokec4 , \cf5 \strokec5 homeErrors\cf4 \strokec4 [\cf5 \strokec5 error\cf4 \strokec4 ]]);\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 error\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 opponentErrors\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 errorsTable\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 ([\cf7 \strokec7 'Opponent'\cf4 \strokec4 , \cf5 \strokec5 error\cf4 \strokec4 , \cf5 \strokec5 opponentErrors\cf4 \strokec4 [\cf5 \strokec5 error\cf4 \strokec4 ]]);\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf8 \strokec8 // Insert the Errors Table\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 ss\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 getActiveSpreadsheet\cf4 \strokec4 ();\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 errorsSheet\cf4 \strokec4  = \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Total Errors'\cf4 \strokec4 ) || \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 insertSheet\cf4 \strokec4 (\cf7 \strokec7 'Total Errors'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 errorsSheet\cf4 \strokec4 .\cf5 \strokec5 clear\cf4 \strokec4 (); \cf8 \strokec8 // Clear any previous data\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 errorsSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 errorsTable\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 , \cf5 \strokec5 errorsTable\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ].\cf5 \strokec5 length\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 errorsTable\cf4 \strokec4 );\cb1 \
\
\cb3     \cf8 \strokec8 // 2. Total Points Won for Each Team\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 pointsTable\cf4 \strokec4  = [[\cf7 \strokec7 'Team'\cf4 \strokec4 , \cf7 \strokec7 'Total Points Won'\cf4 \strokec4 ]];\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 homePoints\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 opponentPoints\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf2 \strokec2 set\cf4 \strokec4  => \{\cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf2 \strokec2 set\cf4 \strokec4  && \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf5 \strokec5 point\cf4 \strokec4  => \{\cb1 \
\cb3           \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 winning_team\cf4 \strokec4  === \cf7 \strokec7 'home'\cf4 \strokec4 ) \cf5 \strokec5 homePoints\cf4 \strokec4 ++;\cb1 \
\cb3           \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 winning_team\cf4 \strokec4  === \cf7 \strokec7 'opponent'\cf4 \strokec4 ) \cf5 \strokec5 opponentPoints\cf4 \strokec4 ++;\cb1 \
\cb3         \});\cb1 \
\cb3       \}\cb1 \
\cb3     \});\cb1 \
\cb3     \cf5 \strokec5 pointsTable\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 ([\cf7 \strokec7 'Home'\cf4 \strokec4 , \cf5 \strokec5 homePoints\cf4 \strokec4 ]);\cb1 \
\cb3     \cf5 \strokec5 pointsTable\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 ([\cf7 \strokec7 'Opponent'\cf4 \strokec4 , \cf5 \strokec5 opponentPoints\cf4 \strokec4 ]);\cb1 \
\
\cb3     \cf8 \strokec8 // Insert the Points Table\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 pointsSheet\cf4 \strokec4  = \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Total Points Won'\cf4 \strokec4 ) || \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 insertSheet\cf4 \strokec4 (\cf7 \strokec7 'Total Points Won'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 pointsSheet\cf4 \strokec4 .\cf5 \strokec5 clear\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 pointsSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 pointsTable\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 , \cf5 \strokec5 pointsTable\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ].\cf5 \strokec5 length\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 pointsTable\cf4 \strokec4 );\cb1 \
\
\cb3     \cf8 \strokec8 // 3. Total Successful Attacks for Each Team\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 successfulAttacksTable\cf4 \strokec4  = [[\cf7 \strokec7 'Team'\cf4 \strokec4 , \cf7 \strokec7 'Successful Attacks'\cf4 \strokec4 ]];\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 homeSuccessfulAttacks\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 opponentSuccessfulAttacks\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf2 \strokec2 set\cf4 \strokec4  => \{\cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf2 \strokec2 set\cf4 \strokec4  && \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf5 \strokec5 point\cf4 \strokec4  => \{\cb1 \
\cb3           \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4  === \cf7 \strokec7 'Sp.'\cf4 \strokec4  || \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4  === \cf7 \strokec7 'Op. Play'\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 winning_team\cf4 \strokec4  === \cf7 \strokec7 'home'\cf4 \strokec4 ) \cf5 \strokec5 homeSuccessfulAttacks\cf4 \strokec4 ++;\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 winning_team\cf4 \strokec4  === \cf7 \strokec7 'opponent'\cf4 \strokec4 ) \cf5 \strokec5 opponentSuccessfulAttacks\cf4 \strokec4 ++;\cb1 \
\cb3           \}\cb1 \
\cb3         \});\cb1 \
\cb3       \}\cb1 \
\cb3     \});\cb1 \
\cb3     \cf5 \strokec5 successfulAttacksTable\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 ([\cf7 \strokec7 'Home'\cf4 \strokec4 , \cf5 \strokec5 homeSuccessfulAttacks\cf4 \strokec4 ]);\cb1 \
\cb3     \cf5 \strokec5 successfulAttacksTable\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 ([\cf7 \strokec7 'Opponent'\cf4 \strokec4 , \cf5 \strokec5 opponentSuccessfulAttacks\cf4 \strokec4 ]);\cb1 \
\
\cb3     \cf8 \strokec8 // Insert the Successful Attacks Table\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 attacksSheet\cf4 \strokec4  = \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Total Successful Attacks'\cf4 \strokec4 ) || \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 insertSheet\cf4 \strokec4 (\cf7 \strokec7 'Total Successful Attacks'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 attacksSheet\cf4 \strokec4 .\cf5 \strokec5 clear\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 attacksSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 successfulAttacksTable\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 , \cf5 \strokec5 successfulAttacksTable\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ].\cf5 \strokec5 length\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 successfulAttacksTable\cf4 \strokec4 );\cb1 \
\
\cb3     \cf8 \strokec8 // 4. Detailed Successful Attacks by Home Player\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 homePlayerAttacksTable\cf4 \strokec4  = [[\cf7 \strokec7 'Home Player'\cf4 \strokec4 , \cf7 \strokec7 'Action Type'\cf4 \strokec4 , \cf7 \strokec7 'Action'\cf4 \strokec4 , \cf7 \strokec7 'Location Tempo'\cf4 \strokec4 , \cf7 \strokec7 'Point Number'\cf4 \strokec4 ]];\cb1 \
\cb3     \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf2 \strokec2 set\cf4 \strokec4  => \{\cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf2 \strokec2 set\cf4 \strokec4  && \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf5 \strokec5 point\cf4 \strokec4  => \{\cb1 \
\cb3           \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 home_player\cf4 \strokec4  && (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4  === \cf7 \strokec7 'Sp.'\cf4 \strokec4  || \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4  === \cf7 \strokec7 'Op. Play'\cf4 \strokec4 )) \{\cb1 \
\cb3             \cf5 \strokec5 homePlayerAttacksTable\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 ([\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 home_player\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 locationTempo\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 point_number\cf4 \strokec4 ]);\cb1 \
\cb3           \}\cb1 \
\cb3         \});\cb1 \
\cb3       \}\cb1 \
\cb3     \});\cb1 \
\
\cb3     \cf8 \strokec8 // Insert the Home Player Attacks Table\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 homePlayerSheet\cf4 \strokec4  = \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Home Player Attacks'\cf4 \strokec4 ) || \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 insertSheet\cf4 \strokec4 (\cf7 \strokec7 'Home Player Attacks'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 homePlayerSheet\cf4 \strokec4 .\cf5 \strokec5 clear\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 homePlayerSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 homePlayerAttacksTable\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 , \cf5 \strokec5 homePlayerAttacksTable\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ].\cf5 \strokec5 length\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 homePlayerAttacksTable\cf4 \strokec4 );\cb1 \
\
\cb3     \cf8 \strokec8 // 5. Detailed Successful Attacks by Opponent Player\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 opponentPlayerAttacksTable\cf4 \strokec4  = [[\cf7 \strokec7 'Opponent Player'\cf4 \strokec4 , \cf7 \strokec7 'Action Type'\cf4 \strokec4 , \cf7 \strokec7 'Action'\cf4 \strokec4 , \cf7 \strokec7 'Location Tempo'\cf4 \strokec4 , \cf7 \strokec7 'Point Number'\cf4 \strokec4 ]];\cb1 \
\cb3     \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf2 \strokec2 set\cf4 \strokec4  => \{\cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf2 \strokec2 set\cf4 \strokec4  && \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 set\cf4 \strokec4 .\cf5 \strokec5 points\cf4 \strokec4 .\cf5 \strokec5 forEach\cf4 \strokec4 (\cf5 \strokec5 point\cf4 \strokec4  => \{\cb1 \
\cb3           \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 opponent_player\cf4 \strokec4  && (\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4  === \cf7 \strokec7 'Sp.'\cf4 \strokec4  || \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4  === \cf7 \strokec7 'Op. Play'\cf4 \strokec4 )) \{\cb1 \
\cb3             \cf5 \strokec5 opponentPlayerAttacksTable\cf4 \strokec4 .\cf5 \strokec5 push\cf4 \strokec4 ([\cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 opponent_player\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action_type\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 action\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 locationTempo\cf4 \strokec4 , \cf5 \strokec5 point\cf4 \strokec4 .\cf5 \strokec5 point_number\cf4 \strokec4 ]);\cb1 \
\cb3           \}\cb1 \
\cb3         \});\cb1 \
\cb3       \}\cb1 \
\cb3     \});\cb1 \
\
\cb3     \cf8 \strokec8 // Insert the Opponent Player Attacks Table\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 opponentPlayerSheet\cf4 \strokec4  = \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Opponent Player Attacks'\cf4 \strokec4 ) || \cf5 \strokec5 ss\cf4 \strokec4 .\cf5 \strokec5 insertSheet\cf4 \strokec4 (\cf7 \strokec7 'Opponent Player Attacks'\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 opponentPlayerSheet\cf4 \strokec4 .\cf5 \strokec5 clear\cf4 \strokec4 ();\cb1 \
\cb3     \cf5 \strokec5 opponentPlayerSheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 opponentPlayerAttacksTable\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 , \cf5 \strokec5 opponentPlayerAttacksTable\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ].\cf5 \strokec5 length\cf4 \strokec4 ).\cf5 \strokec5 setValues\cf4 \strokec4 (\cf5 \strokec5 opponentPlayerAttacksTable\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 flush\cf4 \strokec4 (); \cf8 \strokec8 // Apply all changes\cf4 \cb1 \strokec4 \
\cb3   \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 e\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf6 \strokec6 Logger\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf7 \strokec7 "Error parsing data: "\cf4 \strokec4  + \cf5 \strokec5 e\cf4 \strokec4 .\cf5 \strokec5 message\cf4 \strokec4 ); \cf8 \strokec8 // Log any parsing errors\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
}